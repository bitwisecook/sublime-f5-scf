{ "name": "F5 SCF",
  "scopeName": "source.scf",
  "fileTypes": [
    "scf", 
    "_scf.scf"
  ],
  "firstLineMatch": "^cli admin-partitions ",
  "foldingStartMarker": "\\{\\s*$",
  "foldingEndMarker": "^\\s*\\}",
  "patterns": [
    {
      "begin": "(?<=^|;)\\s*((#))",
      "beginCaptures": {
        "1": {
          "name": "comment.line.number-sign.scf"
        },

        "2": {
          "name": "punctuation.definition.comment.scf"
        }
      },

      "contentName": "comment.line.number-sign.scf",
      "end": "\\n",
      "patterns": [
        {
          "match": "(\\\\\\\\|\\\\\\n)"
        }
      ]
    },
    {
      "match": "^(net)\\s+(arp|lldp-neighbors|packet-filter-trusted|route-domain|self|stp-globals|vlan-allowed|bwc-policy|ipsec-stat|ndp|port-mirror|router-advertisement|self-allow|trunk|vlan-group|cmetrics|lldp-globals|packet-filter|route|rst-cause|stp|vlan|wccp)\\s+(\\/[^/]+)\\/([^\\s]+)\\s+{",
      "captures": {
        "1": {
          "name": "keyword.control.module.scf"
        },
        "2": {
          "name": "keyword.control.component.scf"
        },
        "3": {
          "name": "variable.parameter.folder.scf"
        },
        "4": {
          "name": "variable.parameter.name.scf"
        }
      }
    },
    {
      "match": "^(net)\\s+(interface)\\s+([0-4]\\/[0-9]\\.[0-9]+)\\s+{",
      "captures": {
        "1": {
          "name": "keyword.control.module.scf"
        },
        "2": {
          "name": "keyword.control.component.scf"
        },
        "3": {
          "name": "variable.interface.scf"
        }
      }
    },    
    {
      "match": "^(ltm)\\s+(ifile|nat|policy|pool|snat|snatpool|virtual|lsn-pool|node|policy-strategy|rule|snat-translation|traffic-class|virtual-address)\\s+(\\/[^/]+)\\/([^\\s]+)\\s+{",
      "captures": {
        "1": {
          "name": "keyword.control.module.scf"
        },
        "2": {
          "name": "keyword.control.component.scf"
        },
        "3": {
          "name": "variable.parameter.folder.scf"
        },
        "4": {
          "name": "variable.parameter.name.scf"
        }
      }
    },
    {
      "match": "^(ltm)\\s+(persistence)\\s+(cookie|dest-addr|global-settings|hash|msrdp|persist-records|sip|source-addr|ssl|universal)\\s+(\\/[^/]+)\\/([^\\s]+)\\s+{",
      "captures": {
        "1": {
          "name": "keyword.control.module.scf"
        },
        "2": {
          "name": "keyword.control.component.scf"
        },
        "3": {
          "name": "keyword.control.compmod.scf"
        },
        "4": {
          "name": "variable.parameter.folder.scf"
        },
        "5": {
          "name": "variable.parameter.name.scf"
        }
      }
    },
    {
      "match": "^(ltm)\\s+(auth)\\s+(crldp-server|kerberos-delegation|ldap|ocsp-responder|profile|radius|radius-server|ssl-cc-ldap|ssl-crldp|ssl-ocsp|tacacs)\\s+(\\/[^/]+)\\/([^\\s]+)\\s+{",
      "captures": {
        "1": {
          "name": "keyword.control.module.scf"
        },
        "2": {
          "name": "keyword.control.component.scf"
        },
        "3": {
          "name": "keyword.control.compmod.scf"
        },
        "4": {
          "name": "variable.parameter.folder.scf"
        },
        "5": {
          "name": "variable.parameter.name.scf"
        }
      }
    },
    {
      "match": "^(ltm)\\s+(data-group)\\s+(external|internal)\\s+(\\/[^/]+)\\/([^\\s]+)\\s+{",
      "captures": {
        "1": {
          "name": "keyword.control.module.scf"
        },
        "2": {
          "name": "keyword.control.component.scf"
        },
        "3": {
          "name": "keyword.control.compmod.scf"
        },
        "4": {
          "name": "variable.parameter.folder.scf"
        },
        "5": {
          "name": "variable.parameter.name.scf"
        }
      }
    },
    {
      "match": "^(ltm)\\s+(clientssl-proxy)\\s+(cached-certs)\\s+(\\/[^/]+)\\/([^\\s]+)\\s+{",
      "captures": {
        "1": {
          "name": "keyword.control.module.scf"
        },
        "2": {
          "name": "keyword.control.component.scf"
        },
        "3": {
          "name": "keyword.control.compmod.scf"
        },
        "4": {
          "name": "variable.parameter.folder.scf"
        },
        "5": {
          "name": "variable.parameter.name.scf"
        }
      }
    },
    {
      "match": "^(ltm)\\s+(global-settings)\\s+(connection|general|traffic-control)\\s+(\\/[^/]+)\\/([^\\s]+)\\s+{",
      "captures": {
        "1": {
          "name": "keyword.control.module.scf"
        },
        "2": {
          "name": "keyword.control.component.scf"
        },
        "3": {
          "name": "keyword.control.compmod.scf"
        },
        "4": {
          "name": "variable.parameter.folder.scf"
        },
        "5": {
          "name": "variable.parameter.name.scf"
        }
      }
    },
    {
      "match": "^(ltm)\\s+(html-irule)\\s+(comment-raise-event|comment-remove|tag-append-html|tag-prepend-html|tag-raise-event|tag-remove|tag-remove-attribute)\\s+(\\/[^/]+)\\/([^\\s]+)\\s+{",
      "captures": {
        "1": {
          "name": "keyword.control.module.scf"
        },
        "2": {
          "name": "keyword.control.component.scf"
        },
        "3": {
          "name": "keyword.control.compmod.scf"
        },
        "4": {
          "name": "variable.parameter.folder.scf"
        },
        "5": {
          "name": "variable.parameter.name.scf"
        }
      }
    },
    {
      "match": "^(ltm)\\s+(monitor)\\s+(diameter|ftp|icmp|module-score|none|radius|sasp|smtp|tcp|virtual-location|dns|gateway-icmp|imap|mssql|oracle|radius-accounting|scripted|snmp-dca|tcp-echo|wap|external|http|inband|mysql|pop3|real-server|sip|snmp-dca-base|tcp-half-open|wmi|firepass|https|ldap|nntp|postgresql|rpc|smb|soap|udp)\\s+(\\/[^/]+)\\/([^\\s]+)\\s+{",
      "captures": {
        "1": {
          "name": "keyword.control.module.scf"
        },
        "2": {
          "name": "keyword.control.component.scf"
        },
        "3": {
          "name": "keyword.control.compmod.scf"
        },
        "4": {
          "name": "variable.parameter.folder.scf"
        },
        "5": {
          "name": "variable.parameter.name.scf"
        }
      }
    },
    {
      "match": "^(ltm)\\s+(profile)\\s+(certificate-authority|dns|ftp|icap|one-connect|request-log|sctp|spdy|udp|xml|classification|dns-logging|html|iiop|radius|response-adapt|server-ssl|statistics|wa-cache|client-ssl|fasthttp|http|mblb|ramcache|rewrite|sip|stream|web-acceleration|diameter|fastl4|http-compression|ntlm|request-adapt|rtsp|smtp|tcp|web-security)\\s+(\\/[^/]+)\\/([^\\s]+)\\s+{",
      "captures": {
        "1": {
          "name": "keyword.control.module.scf"
        },
        "2": {
          "name": "keyword.control.component.scf"
        },
        "3": {
          "name": "keyword.control.compmod.scf"
        },
        "4": {
          "name": "variable.parameter.folder.scf"
        },
        "5": {
          "name": "variable.parameter.name.scf"
        }
      }
    },
    {
      "match": "\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\/?([1-9]|[12][0-9]|3[0-2])?\\b",
      "captures": {
        "0": { "name": "constant.numeric.ipv4.scf" }
      }
    },
    {
      "match": "\\s(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]).){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]).){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\b",
      "captures": {
        "0": { "name": "constant.numeric.ipv6.scf" }
      }
    },
    {
      "match": ":?0*(?:6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9])\\b",
      "captures": {
        "0": { "name": "constant.numeric.port.scf" }
      }
    },  
    {
      "match": "\\b[0-4]\\/[0-9]\\.[0-9]+\\b",
      "captures": {
        "0": { "name": "constant.numeric.interface.scf" }
      }
    },
    {
      "match": "\\s+(\\/[^/]+)\\/([^\\s]+)\\s+",
      "captures": {
        "1": {
          "name": "variable.parameter.folder.scf"
        },
        "2": {
          "name": "variable.parameter.name.scf"
        }
      }
    },
    {
      "match": "\\b([0-9]+)\\b",
      "captures": {
        "0": { "name": "keyword.other.scf" }
      }
    },
    {
      "match": "\\b\\$\\w+\\b",
      "captures": {
        "0": { "name": "punctuation.definition.variable.scf" }
      }
    },
    {
      "include": "#escape"
    }, 
    {
      "include": "#variable"
    }, 
    {
      "begin": "\"", 
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.scf"
        }
      }, 
      "end": "\"", 
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.scf"
        }
      }, 
      "name": "string.quoted.double.scf", 
      "patterns": [
        {
          "include": "#escape"
        }, 
        {
          "include": "#variable"
        }, 
        {
          "include": "#embedded"
        }
      ]
    }
  ],
  "repository": {
    "bare-string": {
      "begin": "(?:^|(?<=\\s))\"", 
        "comment": "matches a single quote-enclosed word without scoping", 
        "end": "\"([^\\s\\]]*)", 
        "endCaptures": {
          "1": {
            "name": "invalid.illegal.scf"
          }
        }, 
        "patterns": [
        {
          "include": "#escape"
        }, 
        {
          "include": "#variable"
        }
      ]
    },
    "braces": {
      "begin": "(?:^|(?<=\\s))\\{", 
      "comment": "matches a single brace-enclosed word", 
      "end": "\\}([^\\s\\]]*)", 
      "endCaptures": {
        "1": {
          "name": "invalid.illegal.scf"
        }
      }, 
      "patterns": [
        {
          "match": "\\\\[{}\\n]", 
          "name": "constant.character.escape.scf"
        }, 
        {
          "include": "#inner-braces"
        }
      ]
    }, 
    "embedded": {
      "begin": "\\[", 
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.embedded.begin.scf"
        }
      }, 
      "end": "\\]", 
      "endCaptures": {
        "0": {
          "name": "punctuation.section.embedded.end.scf"
        }
      }, 
      "name": "source.scf.embedded", 
      "patterns": [
        {
          "include": "source.scf"
        }
      ]
    }, 
    "escape": {
      "match": "\\\\(\\d{1,3}|x[a-fA-F0-9]+|u[a-fA-F0-9]{1,4}|.|\\n)", 
      "name": "constant.character.escape.scf"
    }, 
    "inner-braces": {
      "begin": "\\{", 
      "comment": "matches a nested brace in a brace-enclosed word", 
      "end": "\\}", 
      "patterns": [
        {
          "match": "\\\\[{}\\n]", 
          "name": "constant.character.escape.scf"
        }, 
        {
          "include": "#inner-braces"
        }
      ]
    }, 
    "string": {
      "applyEndPatternLast": 1, 
      "begin": "(?:^|(?<=\\s))(?=\")", 
      "comment": "matches a single quote-enclosed word with scoping", 
      "end": "", 
      "name": "string.quoted.double.scf", 
      "patterns": [
        {
          "include": "#bare-string"
        }
      ]
    }, 
    "variable": {
      "captures": {
        "1": {
          "name": "punctuation.definition.variable.scf"
        }
      }, 
      "match": "(\\$)((?:[a-zA-Z0-9_]|::)+(\\([^\\)]+\\))?|\\{[^\\}]*\\})", 
      "name": "variable.other.scf"
    }
  }
}